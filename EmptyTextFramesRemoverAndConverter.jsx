/*Empty Frame Remover 1.022 December 2013A script originally developed by Siva Prasath, and improved upon via the adobe forums indesign scripting page. for full details, mods and acknowledgements see //http://forums.adobe.com/message/5873935#5873935This script is a BETA only - use it only at your own risk!https://creativepro.com/script-cleaning-empty-text-frames/ — Masood Ahmad*/var myDocument = app.activeDocument;app.findGrepPreferences.findWhat = /\A\s+\Z/.source; /*app.changeGrepPreferences.changeTo = „”;*/app.activeDocument.changeGrep();app.findGrepPreferences = app.changeGrepPreferences = null;app.findTextPreferences = app.changeTextPreferences = null;  app.findTextPreferences.findWhat = "<FEFF>"; app.changeTextPreferences.changeTo = ""; myDocument.changeText(); app.findTextPreferences = app.changeTextPreferences = null;var inlines = myDocument.stories.everyItem().pageItems.everyItem().getElements();while(fr=inlines.pop()){  if(fr instanceof Group){continue}  if(fr instanceof TextFrame){    if(fr.contents == "" && fr.strokeWeight == "0" && fr.fillColor.name == "None" && fr.textWrapPreferences.textWrapMode === TextWrapModes.NONE && fr.textPaths.length == 0){fr.remove()}    continue;  }  if(fr.graphics.length==0 && fr.strokeWeight == "0" && fr.fillColor.name == "None" && fr.textWrapPreferences.textWrapMode === TextWrapModes.NONE && fr.textPaths.length == 0){fr.remove()}}var myStories = app.activeDocument.stories.everyItem().getElements();for (i = myStories.length - 1; i >= 0; i--){    var myTextFrames = myStories[i].textFrames;    for (j = myTextFrames.length - 1; j >= 0; j--)    {var stroke = myTextFrames[j].strokeWeight;var color = myTextFrames[j].fillColor.name;var tpath = myTextFrames[j].textPaths.length;var wrap = myTextFrames[j].textWrapPreferences.textWrapMode;//alert (color)     if (myTextFrames[j].contents === "" && stroke == "0" && color == "None" && wrap === TextWrapModes.NONE && tpath == 0){           //alert ("yes")    myTextFrames[j].remove();        }    }}var _d = app.documents[0],    _allStories = _d.stories; for (var n = _allStories.length - 1; n >= 0; n--){    var _storyAllTextFrames = _allStories[n].textContainers;    for (var m = _storyAllTextFrames.length - 1; m >= 0; m--){        if (_storyAllTextFrames[m].contents === "")            try{    _storyAllTextFrames[m].contentType = ContentType.UNASSIGNED;    }catch(e){};    }}var myGraphicFrames = app.activeDocument.rectangles;for (i=myGraphicFrames.length-1; i>=0; i--) {var stroke = myGraphicFrames[i].strokeWeight;var color = myGraphicFrames[i].fillColor.name;var tpath = myGraphicFrames[i].textPaths.length;var wrap = myGraphicFrames[i].textWrapPreferences.textWrapMode;    if (myGraphicFrames[i].graphics.length < 1 && stroke == "0" && color == "None" && wrap === TextWrapModes.NONE && tpath == 0)        myGraphicFrames[i].remove();}var myOvalFrames = app.activeDocument.ovals;for (i=myOvalFrames.length-1; i>=0; i--) {var stroke = myOvalFrames[i].strokeWeight;var color = myOvalFrames[i].fillColor.name;var tpath = myOvalFrames[i].textPaths.length;var wrap = myOvalFrames[i].textWrapPreferences.textWrapMode;    if (myOvalFrames[i].graphics.length < 1 && stroke == "0" && color == "None" && wrap === TextWrapModes.NONE && tpath == 0)        myOvalFrames[i].remove();}var myPolygonFrames = app.activeDocument.polygons;for (i=myPolygonFrames.length-1; i>=0; i--) {var stroke = myPolygonFrames[i].strokeWeight;var color = myPolygonFrames[i].fillColor.name;var tpath = myPolygonFrames[i].textPaths.length;var wrap = myPolygonFrames[i].textWrapPreferences.textWrapMode;    if (myPolygonFrames[i].graphics.length < 1 && stroke == "0" && color == "None" && wrap === TextWrapModes.NONE && tpath == 0)        myPolygonFrames[i].remove();}